import numpy as np
from skimage import io
from matplotlib import pyplot as plt

def LSC(blc_img, k, offset):
  """
  inputs:
    blc_img = bayer domain image after black level compensation
    k = correction factor to control strength of the correction
    offset = offset in case the final image is too bright

  outputs:
    lsc_img = bayer domain image adjusted for lens shading
  """

  lsc_img = np.copy(blc_img) # create a copy of the bayer image to adjust lens shading in
  rows, cols = blc_img.shape
  center_row = (rows // 2) + 1 # store indeces for the center of the image
  center_col = (cols // 2) + 1

  for i in range(rows):
    for j in range(cols):
      r = ( (i - center_row)**2 + (j - center_col)**2 )**0.5 # radial distance to the current pixel
      lsc_img[i, j] = int( blc_img[i, j] * (k * r + 1) - offset)

  return np.clip(lsc_img, 0, (2**16 - 1))

"""
k = 0.0015
offset = 0
lsc_img = LSC(blc_img, k, offset)
plt.imshow(lsc_img, cmap = 'gray')
"""
